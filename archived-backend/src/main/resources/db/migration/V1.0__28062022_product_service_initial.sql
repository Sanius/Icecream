CREATE TABLE categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   name VARCHAR(255),
   CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE faq (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   question TEXT,
   answer TEXT,
   CONSTRAINT pk_faq PRIMARY KEY (id)
);

CREATE TABLE feedbacks (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   title VARCHAR(100),
   content TEXT,
   user_id BIGINT,
   product_id BIGINT,
   CONSTRAINT pk_feedbacks PRIMARY KEY (id)
);

CREATE TABLE order_details (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   quantity INTEGER,
   order_id BIGINT,
   product_id BIGINT,
   CONSTRAINT pk_order_details PRIMARY KEY (id)
);

CREATE TABLE orders (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   code VARCHAR(250),
   payment_method VARCHAR(100),
   status INTEGER,
   user_id BIGINT,
   CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE products (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   name VARCHAR(100),
   description TEXT,
   image VARCHAR(255),
   price FLOAT,
   status INTEGER,
   category_id BIGINT,
   CONSTRAINT pk_products PRIMARY KEY (id)
);

CREATE TABLE roles (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   name VARCHAR(20),
   CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE user_details (
  id BIGINT NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   firstname VARCHAR(100),
   lastname VARCHAR(100),
   address VARCHAR(100),
   gender VARCHAR(20),
   birthday date,
   avatar VARCHAR(250),
   user_id BIGINT,
   CONSTRAINT pk_user_details PRIMARY KEY (id)
);

CREATE TABLE user_role (
  role_id BIGINT NOT NULL,
   user_id BIGINT NOT NULL,
   CONSTRAINT pk_user_role PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   last_update_time TIMESTAMP DEFAULT current_timestamp,
   username VARCHAR(100),
   email VARCHAR(100),
   password VARCHAR(255),
   status INTEGER,
   CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE categories ADD CONSTRAINT uc_categories_name UNIQUE (name);

ALTER TABLE orders ADD CONSTRAINT uc_orders_code UNIQUE (code);

ALTER TABLE roles ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE users ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE feedbacks ADD CONSTRAINT FK_FEEDBACKS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE feedbacks ADD CONSTRAINT FK_FEEDBACKS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE orders ADD CONSTRAINT FK_ORDERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE order_details ADD CONSTRAINT FK_ORDER_DETAILS_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE order_details ADD CONSTRAINT FK_ORDER_DETAILS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE products ADD CONSTRAINT FK_PRODUCTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id);

ALTER TABLE user_details ADD CONSTRAINT FK_USER_DETAILS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_role ADD CONSTRAINT fk_user_role_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_role ADD CONSTRAINT fk_user_role_on_user FOREIGN KEY (user_id) REFERENCES users (id);
