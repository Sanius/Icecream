server:
  port: ${FRONTIER_PORT}
  servlet.context-path: /console

springdoc:
  api-docs:
    path: /swagger-resources
  swagger-ui:
    path: /swagger-ui

spring:
  application:
    name: Icecream e-commerce
    version: 0.1.0
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      resolve-lazily: true
  datasource:
    username: ${POSTGRESQL_USER}
    password: ${POSTGRESQL_PASSWORD}
    url: jdbc:postgresql://${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_FRONTIER_DB}
    driverClassName: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
    hibernate:
      ddl-auto: none
  liquibase:
    enabled: true
    changeLog: classpath:/db/changelog/master.xml
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${IDENTITY_ISSUER}
          jwk-set-uri: ${IDENTITY_ISSUER}/protocol/openid-connect/certs
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  graphql:
    graphiql:
      enabled: true
      path: /graphiql
      allowed-method: GET,POST
      max-age: 3600
    cors:
      allow-credentials: true
      allowed-origins:
        - ${STOREFRONT_URL}

jwt:
  auth:
    converter:
      resource-id: ${IDENTITY_STOREFRONT_CLIENT_ID}
      principle-attribute: email

minio:
  url: ${STORAGE_URL}
  access:
    key: ${MINIO_ACCESS_KEY}
    secret: ${MINIO_SECRET_KEY}
  bucket:
    image: images

app:
  cors:
    allowed-origins:
      ${STOREFRONT_URL},

grpc:
  server:
    port: ${FRONTIER_GRPC_PORT}
  client:
    chronos:
      address: ${CHRONOS_GRPC_HOST}:${CHRONOS_GRPC_PORT}
      negotiation-type: plaintext
    echo:
      address: ${ECHO_GRPC_HOST}:${ECHO_GRPC_PORT}
      negotiation-type: plaintext

logging:
  level:
    sanlab.icecream.frontier: INFO
